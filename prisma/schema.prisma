generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  profiles                    profiles?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bau_progress_entries {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  period_id            String               @db.Uuid
  template_kpi_id      String               @db.Uuid
  recorded_value       Decimal              @db.Decimal
  notes                String?
  recorded_at          DateTime             @default(now()) @db.Timestamptz(6)
  recorded_by          String               @db.Uuid
  bau_progress_periods bau_progress_periods @relation(fields: [period_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles             profiles             @relation(fields: [recorded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  template_kpis        template_kpis        @relation(fields: [template_kpi_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([period_id], map: "idx_bau_progress_entries_period_id")
  @@index([template_kpi_id], map: "idx_bau_progress_entries_template_kpi_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bau_progress_periods {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_instance_id     String                 @db.Uuid
  period_number        Int
  period_name          String
  start_date           DateTime               @db.Date
  end_date             DateTime               @db.Date
  is_completed         Boolean                @default(false)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  bau_progress_entries bau_progress_entries[]
  bau_task_instances   bau_task_instances     @relation(fields: [task_instance_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([period_number], map: "idx_bau_progress_periods_period_number")
  @@index([task_instance_id], map: "idx_bau_progress_periods_task_instance_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bau_task_instances {
  id                                                 String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_id                                        String                 @db.Uuid
  assigned_to                                        String                 @db.Uuid
  title                                              String
  description                                        String?
  due_date                                           DateTime               @db.Date
  status                                             String                 @default("Pending")
  priority                                           String                 @default("Medium")
  completed_at                                       DateTime?              @db.Timestamptz(6)
  completed_by                                       String?                @db.Uuid
  created_at                                         DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                         DateTime               @default(now()) @db.Timestamptz(6)
  progress_percentage                                Decimal?               @default(0) @db.Decimal
  score                                              Decimal?               @default(0) @db.Decimal
  periods_completed                                  Int?                   @default(0)
  total_periods                                      Int?                   @default(1)
  bau_progress_periods                               bau_progress_periods[]
  profiles_bau_task_instances_assigned_toToprofiles  profiles               @relation("bau_task_instances_assigned_toToprofiles", fields: [assigned_to], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles_bau_task_instances_completed_byToprofiles profiles?              @relation("bau_task_instances_completed_byToprofiles", fields: [completed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bau_templates                                      bau_templates          @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  task_kpi_records                                   task_kpi_records[]

  @@index([assigned_to], map: "idx_bau_task_instances_assigned_to")
  @@index([due_date], map: "idx_bau_task_instances_due_date")
  @@index([status], map: "idx_bau_task_instances_status")
  @@index([template_id], map: "idx_bau_task_instances_template_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bau_templates {
  id                                              String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                            String
  description                                     String?
  department                                      String
  frequency                                       bau_frequency
  status                                          bau_template_status    @default(Draft)
  version                                         Int                    @default(1)
  created_by                                      String                 @db.Uuid
  created_at                                      DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                      DateTime               @default(now()) @db.Timestamptz(6)
  deactivated_at                                  DateTime?              @db.Timestamptz(6)
  deactivated_by                                  String?                @db.Uuid
  bau_task_instances                              bau_task_instances[]
  profiles_bau_templates_created_byToprofiles     profiles               @relation("bau_templates_created_byToprofiles", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles_bau_templates_deactivated_byToprofiles profiles?              @relation("bau_templates_deactivated_byToprofiles", fields: [deactivated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  template_assignments                            template_assignments[]
  template_kpis                                   template_kpis[]

  @@index([created_by], map: "idx_bau_templates_created_by")
  @@index([department], map: "idx_bau_templates_department")
  @@index([status], map: "idx_bau_templates_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model checkin_followup_tasks {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  checkin_id           String                 @db.Uuid
  task_description     String
  status               String                 @default("Pending")
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  assigned_to          String?                @db.Uuid
  profiles             profiles?              @relation(fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  hr_checkins          hr_checkins            @relation(fields: [checkin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  checkin_task_updates checkin_task_updates[]

  @@index([checkin_id], map: "idx_followup_tasks_checkin")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model checkin_task_updates {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  original_task_id       String                 @db.Uuid
  new_checkin_id         String                 @db.Uuid
  previous_status        String
  new_status             String
  updated_at             DateTime               @default(now()) @db.Timestamptz(6)
  hr_checkins            hr_checkins            @relation(fields: [new_checkin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  checkin_followup_tasks checkin_followup_tasks @relation(fields: [original_task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([original_task_id], map: "idx_task_updates_original_task")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model departments {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  description String?
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
  created_by  String   @db.Uuid
  profiles    profiles @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model hr_checkins {
  id                                           String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  member_id                                    String                   @db.Uuid
  checked_in_by                                String                   @db.Uuid
  checkin_date                                 DateTime                 @default(dbgenerated("CURRENT_DATE")) @db.Date
  department                                   String?
  notes                                        String?
  status                                       String                   @default("Normal")
  created_at                                   DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime                 @default(now()) @db.Timestamptz(6)
  checkin_followup_tasks                       checkin_followup_tasks[]
  checkin_task_updates                         checkin_task_updates[]
  profiles_hr_checkins_checked_in_byToprofiles profiles                 @relation("hr_checkins_checked_in_byToprofiles", fields: [checked_in_by], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles_hr_checkins_member_idToprofiles     profiles                 @relation("hr_checkins_member_idToprofiles", fields: [member_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([checked_in_by], map: "idx_hr_checkins_checked_in_by")
  @@index([member_id, checkin_date(sort: Desc)], map: "idx_hr_checkins_member_date")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invitations {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique
  role        app_role
  invited_by  String    @db.Uuid
  invited_at  DateTime? @default(now()) @db.Timestamptz(6)
  expires_at  DateTime? @default(dbgenerated("(now() + '7 days'::interval)")) @db.Timestamptz(6)
  accepted_at DateTime? @db.Timestamptz(6)
  is_accepted Boolean?  @default(false)
  token       String?   @unique @default(dbgenerated("encode(gen_random_bytes(32), 'hex'::text)"))
  profiles    profiles  @relation(fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([email], map: "idx_invitations_email")
  @@index([expires_at], map: "idx_invitations_expires_at")
  @@index([token], map: "idx_invitations_token")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id                                                              String                   @id @db.Uuid
  email                                                           String                   @unique
  first_name                                                      String?
  last_name                                                       String?
  display_name                                                    String?
  avatar_url                                                      String?
  phone                                                           String?
  department                                                      String?
  position                                                        String?
  is_active                                                       Boolean?                 @default(true)
  created_at                                                      DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                                                      DateTime?                @default(now()) @db.Timestamptz(6)
  bau_progress_entries                                            bau_progress_entries[]
  bau_task_instances_bau_task_instances_assigned_toToprofiles     bau_task_instances[]     @relation("bau_task_instances_assigned_toToprofiles")
  bau_task_instances_bau_task_instances_completed_byToprofiles    bau_task_instances[]     @relation("bau_task_instances_completed_byToprofiles")
  bau_templates_bau_templates_created_byToprofiles                bau_templates[]          @relation("bau_templates_created_byToprofiles")
  bau_templates_bau_templates_deactivated_byToprofiles            bau_templates[]          @relation("bau_templates_deactivated_byToprofiles")
  checkin_followup_tasks                                          checkin_followup_tasks[]
  departments                                                     departments[]
  hr_checkins_hr_checkins_checked_in_byToprofiles                 hr_checkins[]            @relation("hr_checkins_checked_in_byToprofiles")
  hr_checkins_hr_checkins_member_idToprofiles                     hr_checkins[]            @relation("hr_checkins_member_idToprofiles")
  invitations                                                     invitations[]
  users                                                           users                    @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  task_kpi_records                                                task_kpi_records[]
  template_assignments_template_assignments_assigned_byToprofiles template_assignments[]   @relation("template_assignments_assigned_byToprofiles")
  template_assignments_template_assignments_user_idToprofiles     template_assignments[]   @relation("template_assignments_user_idToprofiles")
  user_roles_user_roles_assigned_byToprofiles                     user_roles[]             @relation("user_roles_assigned_byToprofiles")
  user_roles_user_roles_user_idToprofiles                         user_roles[]             @relation("user_roles_user_idToprofiles")

  @@index([email], map: "idx_profiles_email")
  @@index([is_active], map: "idx_profiles_is_active")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_kpi_records {
  id                 String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_instance_id   String             @db.Uuid
  template_kpi_id    String             @db.Uuid
  recorded_value     Decimal            @db.Decimal
  recorded_at        DateTime           @default(now()) @db.Timestamptz(6)
  recorded_by        String             @db.Uuid
  profiles           profiles           @relation(fields: [recorded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bau_task_instances bau_task_instances @relation(fields: [task_instance_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  template_kpis      template_kpis      @relation(fields: [template_kpi_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([task_instance_id], map: "idx_task_kpi_records_task_instance_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model template_assignments {
  id                                                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_id                                         String        @db.Uuid
  user_id                                             String        @db.Uuid
  assigned_by                                         String        @db.Uuid
  assigned_at                                         DateTime      @default(now()) @db.Timestamptz(6)
  profiles_template_assignments_assigned_byToprofiles profiles      @relation("template_assignments_assigned_byToprofiles", fields: [assigned_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bau_templates                                       bau_templates @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles_template_assignments_user_idToprofiles     profiles      @relation("template_assignments_user_idToprofiles", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([template_id, user_id])
  @@index([template_id], map: "idx_template_assignments_template_id")
  @@index([user_id], map: "idx_template_assignments_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model template_kpis {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_id          String                 @db.Uuid
  name                 String
  unit                 kpi_unit
  operator             kpi_operator
  target_value         Decimal                @db.Decimal(10, 2)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  source               String?
  bau_progress_entries bau_progress_entries[]
  task_kpi_records     task_kpi_records[]
  bau_templates        bau_templates          @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([template_id], map: "idx_template_kpis_template_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_roles {
  id                                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                   String    @db.Uuid
  role                                      app_role
  assigned_by                               String?   @db.Uuid
  assigned_at                               DateTime? @default(now()) @db.Timestamptz(6)
  profiles_user_roles_assigned_byToprofiles profiles? @relation("user_roles_assigned_byToprofiles", fields: [assigned_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles_user_roles_user_idToprofiles     profiles  @relation("user_roles_user_idToprofiles", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role])
  @@index([role], map: "idx_user_roles_role")
  @@index([user_id], map: "idx_user_roles_user_id")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum app_role {
  Admin
  HR
  Team_Lead
  Team_Member

  @@schema("public")
}

enum bau_frequency {
  Daily
  Weekly
  Bi_Weekly @map("Bi-Weekly")
  Monthly

  @@schema("public")
}

enum bau_template_status {
  Draft
  Active
  Deactivated

  @@schema("public")
}

enum kpi_operator {
  GreaterThanEqual
  LessThanEqual

  @@schema("public")
}

enum kpi_unit {
  Percentage
  Count

  @@schema("public")
}
